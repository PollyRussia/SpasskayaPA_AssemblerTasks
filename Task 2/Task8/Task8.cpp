// Task8.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
#include <string>
using namespace std;

int main()
{
	setlocale(LC_ALL, "RUS");
	cout << "Задача 8" << "\n";
	cout << "Пользователь вводит строку и получает результат ее шифрования/дешифрования" << "\n";

	// ПЕРЕМЕННЫЕ
	char s[120]; // строка ввода
	char sout[120] = { ' ' }; // строка вывода
	char  a[63] = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"; // алфавит исходных символов
	char  b[63] = "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm3456789012"; // алфавит шифрования

																					// ВВОД
	cout << "Введите строку" << "\n";
	fgets(s, 120, stdin);
	cout << "Чтобы зашифровать строку введите 1, дешифровать - 2" << "\n";
	int n;
	cin >> n;

	if (n == 1) // Шифрование
	{
		// ШИФРОВАНИЕ
		__asm
		{
			mov edx, 0 // edx - счетчик строки
			mov ESI, edx
			xor eax, eax
			mov al, s[ESI] // al - текущий элемент строки
			prime0:
			// начало цикла перебора символов строки
			xor ecx, ecx // edc - счетчик алфавита шифрования
				prime3 :
			// начало цикла перебора символов алфавита
			mov ESI, ecx
				inc ecx // увеличение счетчика
				cmp al, a[ESI] // сравнение текущих символов строки и алфавита
				jne prime3 // здесь можно вставить проверку на символ не из алфавита, чтобы избежать зацикливания
						   // конец цикла
				mov bl, b[ESI] // bl - новый элемент
				mov ESI, edx // счетчмик строки
				mov sout[ESI], bl // запись нового символа
				inc edx // увеличение счетчика
				mov ESI, edx
				xor eax, eax // очищение регистра
				mov al, s[ESI] // запомнили следующий символ строки
				cmp ax, 0 // проверка на конец строки
				jne prime0
				// конец цикла
		}

		//ВЫВОД
		cout << "Результат шифрования:" << "\n" << sout << "\n";
	}
	else if (n == 2) // Дешифрование
	{
		// ДЕШИФРОВАНИЕ
		__asm
		{
			mov edx, 0 // edx - счетчик строки
			mov ESI, edx
			xor eax, eax
			mov al, s[ESI] // al - текущий элемент строки
			prime1:
			// начало цикла перебора символов строки
			xor ecx, ecx // edc - счетчик алфавита дешифрования
				prime2 :
			// начало цикла перебора символов алфавита
			mov ESI, ecx
				inc ecx // увеличение счетчика
				cmp al, b[ESI] // сравнение текущих символов строки и алфавита
				jne prime2 // здесь можно вставить проверку на символ не из алфавита, чтобы избежать зацикливания
						   // конец цикла
				mov bl, a[ESI] // bl - новый элемент
				mov ESI, edx // счетчик строки
				cmp bl, 122 // проверяем входит ли символ в алфавит (122 код 'z')
				ja prime4 // на мой взгляд, проверка лишняя, но без нее в новую строку записывается русская М
						  // еще более странно, что эта ошибка не проявляется при шифровании
				mov sout[ESI], bl // запись нового символа
				inc edx // увеличение счетчика
				mov ESI, edx
				xor eax, eax // очищение регистра
				mov al, s[ESI] // запомнили следующий символ строки
				cmp ax, 0 // проверка на конец строки
				jne prime1
				// конец цикла
				prime4 :
		}
		//ВЫВОД
		cout << "Результат дешифрования:" << "\n" << sout << "\n";
	}
	else
		cout << "Ошибка!" << "\n";
	return 0;
}
